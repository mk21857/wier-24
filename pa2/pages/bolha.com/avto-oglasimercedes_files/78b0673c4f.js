import{_ as e}from"./f141f5a29b.js";import{F as t,i as s}from"./825e28468d.js";import{s as a}from"./35000cdd91.js";import{N as o}from"./f1e6940fcf.js";import"./7abd8ddb57.js";import{t as i}from"./7c6ae762e4.js";import"./2be7671a02.js";import"./a20b5a7092.js";import"./eae60494e1.js";import"./d896c9814e.js";import"./436d401516.js";class r extends t{static childrenEl={rangeModule:".GeoLocationSelector-range",rangeSliderWrap:".GeoLocationSelector-sliderWrap",rangeValue:".GeoLocationSelector-value",rangeInput:".GeoLocationSelector-slider",preloader:".GeoLocationSelector-preloader .Preloader-inner"};static events={"input .GeoLocationSelector-slider":"updateRange","change .GeoLocationSelector-slider":"updateRange","click .GeoLocationSelector-range":"onRangeClick"};constructor(e){super(e),this.cacheChildrenEl({latInputValue:this.props.lat.el,lngInputValue:this.props.lng.el,range:this.props.radius.el,radiusInputValue:this.props.radius.input}),this.mountComponents(),this.setupEvents()}mountComponents(){this.props.autoComplete&&e((()=>import("./332625f06b.js")),["332625f06b.js","f141f5a29b.js","825e28468d.js","2be7671a02.js","a20b5a7092.js","eae60494e1.js","e5795dfffe.js","7abd8ddb57.js","7c6ae762e4.js"]).then((({default:e})=>this.mountAutoComplete(e))),this.props.address&&!this.props.autoComplete&&e((()=>import("./5b3f3ff4e5.js")),["5b3f3ff4e5.js","825e28468d.js","2be7671a02.js","f141f5a29b.js","a20b5a7092.js","eae60494e1.js","e5795dfffe.js","f1e6940fcf.js","d896c9814e.js","436d401516.js","7abd8ddb57.js","7c6ae762e4.js"]).then((({default:e})=>this.mountAddress(e))),this.props.autoLocate&&e((()=>import("./7a3c751f30.js")),["7a3c751f30.js","825e28468d.js","2be7671a02.js","f141f5a29b.js","a20b5a7092.js","eae60494e1.js"]).then((({default:e})=>this.mountAutoLocate(e))),this.props.radius&&this.mountRange()}mountAutoComplete(e){this.autoCompleteSelector=new e(Object.assign({},this.props.autoComplete,{parent:this,autoLocate:this.props.autoLocate,isRangeBlocked:this.props.isRangeBlocked,update:e=>{this.setState(e)}}))}mountAddress(e){this.addressSelector=new e(Object.assign({},this.props.address,{parent:this,autoLocate:this.props.autoLocate,isRangeBlocked:this.props.isRangeBlocked,update:e=>{this.setState(e)}}))}mountAutoLocate(e){this.autoLocateSelector=new e(Object.assign({},this.props.autoLocate,{isEmbeded:this.props.address||this.props.autoComplete,parent:this,isRangeBlocked:this.props.isRangeBlocked,update:e=>{this.setState(e)}}))}mountRange(){this.$rangeInput.setAttribute("min",1),this.$rangeInput.setAttribute("max",this.props.radius.values.length),this.$rangeInput.value=this.rangeToValue(this.props.radius.initialValue),this.radiusValue=this.props.radius.initialValue,this.setState({disabled:""===this.$radiusInputValue.value,rangeValue:this.props.radius.initialValue})}onRangeClick(){if(this.state.disabled&&!this.props.isRangeBlocked()&&(this.props.autoComplete||this.props.address)){const e=this.props.autoComplete?this.props.autoComplete.input:this.props.address.input;setTimeout((()=>{document.querySelector(e).focus()}),0)}}setupEvents(){s.subscribe("sortByDistance",(e=>{if(this.canSaveRadius())e.success();else if(this.autoLocateSelector){this[(()=>this.autoCompleteSelector?"autoCompleteSelector":this.addressSelector?"addressSelector":"autoLocateSelector")()].autoLocate().then((t=>(this.props.isRangeBlocked()&&this.props.resolveBlocker(),this.setState({sliderValue:this.props.radius.values.length,rangeValue:99999}),e.success()))).catch((t=>{this.focusAutoLocataError(),e.fail()}))}else e.fail()}))}updateRange(e){this.setState({rangeValue:this.valueToRange(e.target.value)})}render(e,t){"sliderValue"===e&&(this.$rangeInput.value=t),"rangeValue"===e&&(this.$rangeValue.innerHTML=99999===t?i("geolocation.web.filter.range_all"):`${t} <span class="GeoLocationSelector-valueUnit">km</span>`,this.$rangeSliderWrap.setAttribute("data-position",this.$rangeInput.value),this.canSaveRadius()?this.$radiusInputValue.value=t:this.radiusValue=t),"coordinates"===e&&(this.$latInputValue.value=t.lat,this.$lngInputValue.value=t.lng,this.$radiusInputValue.value=this.canSaveRadius()?this.radiusValue:""),"disabled"===e&&(this.$rangeModule.classList.toggle("disabled",t),this.$rangeInput.disabled=t,t&&this.props.onDisabled()),"autoLocateError"===e&&this.toggleAutoLocateError(t),"loading"===e&&this.$preloader.classList.toggle("is-active",t)}toggleAutoLocateError(e){this.removeSideEffect("autoLocateError"),e&&this.addSideEffect((()=>{const e=new o({isError:!0,message:i("geolocation.web.filter.autolocate_fail")});return this.$range.parentNode.insertBefore(e.$el,this.$range),()=>{this.$range.parentNode.removeChild(e.$el),e.remove()}}),"autoLocateError")}focusAutoLocataError(){a(this.$el,{scrollMode:"if-needed",block:"start",behavior:"smooth"})}clear(){this.props.autoComplete?this.autoCompleteSelector.clear():this.props.address?this.addressSelector.clear():this.props.autoLocate&&this.autoLocateSelector.clear()}canSaveRadius(){return this.$latInputValue.value&&this.$lngInputValue.value}isDisabled(){return this.state.disabled}rangeToValue(e){return this.props.radius.values.indexOf(e)+1}valueToRange(e){return this.props.radius.values[parseInt(e,10)-1]}}export{r as default};
