import{g as e,u as t,q as i}from"./a20b5a7092.js";import{F as a,i as s,u as r,l as n,U as o,j as c,k as h,M as l,S as d}from"./825e28468d.js";import{t as p}from"./d896c9814e.js";import u from"./e5795dfffe.js";import"./7abd8ddb57.js";import{r as f}from"./62cedc6c89.js";import{q as m}from"./de2ef5ef52.js";import{t as v}from"./7c6ae762e4.js";import"./2be7671a02.js";import"./f141f5a29b.js";import"./eae60494e1.js";var S=/^(?:submit|button|image|reset|file)$/i,b=/^(?:input|select|textarea|keygen)/i,g=/(\[[^\[\]]*\])/g;function C(e,t,i){if(0===t.length)return e=i;var a=t.shift(),s=a.match(/^\[(.+?)\]$/);if("[]"===a)return e=e||[],Array.isArray(e)?e.push(C(null,t,i)):(e._values=e._values||[],e._values.push(C(null,t,i))),e;if(s){var r=s[1],n=+r;isNaN(n)?(e=e||{})[r]=C(e[r],t,i):(e=e||[])[n]=C(e[n],t,i)}else e[a]=C(e[a],t,i);return e}function y(e,t,i){if(t.match(g)){C(e,function(e){var t=[],i=new RegExp(g),a=/^([^\[\]]*)/.exec(e);for(a[1]&&t.push(a[1]);null!==(a=i.exec(e));)t.push(a[1]);return t}(t),i)}else{var a=e[t];a?(Array.isArray(a)||(e[t]=[a]),e[t].push(i)):e[t]=i}return e}function N(e,t,i){return i=i.replace(/(\r)?\n/g,"\r\n"),i=(i=encodeURIComponent(i)).replace(/%20/g,"+"),e+(e?"&":"")+encodeURIComponent(t)+"="+i}const _=e((function(e,t){"object"!=typeof t?t={hash:!!t}:void 0===t.hash&&(t.hash=!0);for(var i=t.hash?{}:"",a=t.serializer||(t.hash?y:N),s=e&&e.elements?e.elements:[],r=Object.create(null),n=0;n<s.length;++n){var o=s[n];if((t.disabled||!o.disabled)&&o.name&&(b.test(o.nodeName)&&!S.test(o.type))){var c=o.name,h=o.value;if("checkbox"!==o.type&&"radio"!==o.type||o.checked||(h=void 0),t.empty){if("checkbox"!==o.type||o.checked||(h=""),"radio"===o.type&&(r[o.name]||o.checked?o.checked&&(r[o.name]=!0):r[o.name]=!1),null==h&&"radio"==o.type)continue}else if(!h)continue;if("select-multiple"!==o.type)i=a(i,c,h);else{h=[];for(var l=o.options,d=!1,p=0;p<l.length;++p){var u=l[p],f=t.empty&&!u.value,m=u.value||f;u.selected&&m&&(d=!0,i=t.hash&&"[]"!==c.slice(c.length-2)?a(i,c+"[]",u.value):a(i,c,u.value))}!d&&t.empty&&(i=a(i,c,""))}}}if(t.empty)for(var c in r)r[c]||(i=a(i,c,""));return i}));function x(e){return Object.entries(e).map((([e,t])=>"category_id"===e?["categoryId",t]:[e,t])).reduce(((e,[t,i])=>({...e,[t]:i})),{})}class $ extends a{static el=".SavedSearchCreate";static events={"input .SavedSearchCreate-title"(e){this.setState({title:e.target.value})},"click .SavedSearchCreate-baseAction--expand"(){this.setState({expand:!this.state.expand})},"click .SavedSearchCreate-action--cancel"(){this.setState({expand:!1})},"click .SavedSearchCreate-action--submit"(){this.submitFormEvent()},"change .SavedSearchCreate-receiveNotifications"(e){this.handleReceiveNotifications(e.target.checked)},"change .SavedSearchCreate-notificationChannel"(e){this.setState({notificationChannel:e.target.value})},"change .SavedSearchCreate-notificationFrequency"(e){this.setState({notificationFrequency:e.target.value})},"focus .SavedSearchCreate-title":"preventFormSubmit","blur .SavedSearchCreate-title":"unpreventFormSubmit"};static childrenEl={expand:".SavedSearchCreate-baseAction--expand",information:".SavedSearchCreate-information",title:".SavedSearchCreate-title",submit:".SavedSearchCreate-action--submit",cancel:".SavedSearchCreate-action--cancel",notifications:".SavedSearchCreate-notifications",notificationChannelNotifications:".SavedSearchCreate-notificationChannelNotifications",receiveNotifications:".SavedSearchCreate-receiveNotifications","notificationChannel[]":".SavedSearchCreate-notificationChannel","notificationFrequency[]":".SavedSearchCreate-notificationFrequency"};static defaultProps={searchContext:"",searchParameters:{},searchUrl:"",savedSearchEditUrl:"",loginUrl:"",formId:"",defaultSuggestedTitle:"",mobileAppIosAppStoreUrl:"",mobileAppAndroidAppStoreUrl:""};constructor(e){super(e),this.setupElements(),this.setupComponentDisplay()}setupElements(){this.$form=document.querySelector(`#${this.props.formId}`)}preventFormSubmit(){s.publish("entityListFormHandler",(e=>{e.preventDefault(),this.submitFormEvent()}))}unpreventFormSubmit(){s.publish("entityListFormHandler",null)}async setupComponentDisplay(){if(this.setState({receiveNotifications:this.$receiveNotifications.checked,notificationChannel:this.$notificationChannel.find((e=>e.checked)).value,notificationFrequency:this.$notificationFrequency.find((e=>e.checked)).value}),r.isLoggedIn()){this.setState({disableExpand:!0});try{const e=await this.checkIfSavedSearchExists(!0);if(this.setState({expand:!1,disableExpand:e,savedSearchExists:e}),e)return;this.setState({loading:!0});const t=await this.getSuggestedTitle(!0);this.setState({title:t})}finally{this.setState({loading:!1})}}else this.setState({disableExpand:!1,title:this.props.defaultSuggestedTitle})}async submitFormEvent(){this.setState({loading:!0});try{await this.submitForm(),this.trackEvent(),this.setState({genericError:!1,savedSearchExists:!0,expand:!1})}catch(e){n(),this.setState({genericError:e.errors[0].title})}finally{this.setState({loading:!1})}}trackEvent(){const e=this.props.searchContext;o(["_trackEvent","Saved Searches",`Email Notification ${e} saved`,this.props.searchUrl,0,!0])}getSearchParameters(e,a=!1){const{query:s}=t.parse(e,!0),r=i.parse(_(this.$form)),n=[];a?(n.push(r),n.push(this.props.searchParameters)):(n.push(this.props.searchParameters),n.push(r)),n.push(s??{});const o=n.reduce(((e,t)=>({...e,...x(t)})),{});return delete o.ctl,delete o["saved_search_create[notificationChannel]"],i.stringify(o)}async getSuggestedTitle(e=!1){const t=new l("saved-search");t.setAttribute("searchContext",this.props.searchContext),t.setAttribute("searchParameters",this.getSearchParameters(this.props.searchUrl,e));const i=t.serialize(),a=await u({url:"/ccapi/v2/user/me/saved-searches/suggest-title",method:"POST",data:i}),s=new d;s.sync(a);return s.find("saved-search").title}async checkIfSavedSearchExists(e=!1){const t=new l("saved-search");t.setAttribute("searchContext",this.props.searchContext),t.setAttribute("searchParameters",this.getSearchParameters(this.props.searchUrl,e));const i=t.serialize();try{return await u({url:"/ccapi/v2/user/me/saved-searches/exists",method:"POST",data:i,dataType:"text"}),!1}catch(a){return!0}}async submitForm(){const e=new l("saved-search");e.setAttribute("title",this.state.title),e.setAttribute("receiveNotifications",this.state.receiveNotifications),e.setAttribute("notificationChannel",this.state.notificationChannel),e.setAttribute("searchContext",this.props.searchContext),e.setAttribute("searchParameters",this.getSearchParameters(this.props.searchUrl));const t=e.serialize();await u({url:"/ccapi/v2/user/me/saved-searches",method:"POST",data:t})}render(e,t){if("loading"===e&&(this.$title.disabled=t,this.$cancel.disabled=t,this.$receiveNotifications.closest(".form-label").classList.toggle("is-disabled",t),this.$receiveNotifications.disabled=t,this.$notificationChannel.forEach((e=>{e.closest(".form-label").classList.toggle("is-disabled",t),e.disabled=t})),this.$notificationFrequency.forEach((e=>{e.closest(".form-label").classList.toggle("is-disabled",!0),e.disabled=!0}))),"title"===e&&(this.$title.value=t),"title"===e||"loading"===e){const e=""===this.state.title||!0===this.state.loading;null!==this.$submit&&(this.$submit.disabled=e)}if("disableExpand"===e&&(this.$expand.disabled=t),"savedSearchExists"===e&&t){const e=p`
					<a
						href="${this.props.savedSearchEditUrl}"
						class="SavedSearchCreate-baseAction SavedSearchCreate-baseAction--edit"
						${m("saved_search.create.go_to_edit")}
					>
						<i
							class="icon icon--xs icon--saved-search-create"
							aria-hidden="true"
							role="presentation"
						></i
						>${v("ad_search.saved_search.create.success")}
					</a>
				`;this.$expand.replaceWith(e)}if("expand"===e&&(t?this.$el.classList.add("is-open"):(this.$el.classList.remove("is-open"),this.renderRemoveNotifications())),"genericError"===e&&(!0===t?this.renderAddNotifications(v("ad_search.saved_search.create.error"),"invalid"):"string"==typeof t?this.renderAddNotifications(v(t),"invalid"):this.renderRemoveNotifications()),"estimatedNumberOfResults"===e)if(""!==t){let e=t;"search"===this.props.searchContext&&this.isSearchTooGenericForNotifications&&(e=`${v("ad_search.saved_search.create.precise_results")}<br /><br />${t}`),this.renderAddNotifications(e,"info")}else this.renderRemoveNotifications();if("notificationChannel"===e)if("push_notification"===t){const{url:e,external:t}=this.resolveMobileAppStoreLink();this.renderAddNotificationChannelNotifications(`${v("ad_search.saved_search.create.push_notification_usage_notice")}<br /><br />${v("ad_search.saved_search.create.push_notification_usage_notice_app_link",{linkStartTag:`<a href="${e}"${t?' target="_blank" rel="noopener nofollow"':""}>`,linkEndTag:"</a>"})}.`,"info")}else this.renderRemoveNotificationChannelNotifications()}resolveMobileAppStoreLink(){return c()?{url:this.props.mobileAppIosAppStoreUrl,external:!0}:h()?{url:this.props.mobileAppAndroidAppStoreUrl,external:!0}:{url:f({name:"mobile_app_information"}),external:!1}}renderAddNotifications(e,t){const i=p`
			<div class="notification notification--${t}">
				<p>${e}</p>
			</div>
		`;this.$notifications.classList.remove("hidden"),this.$notifications.innerHTML="",this.$notifications.appendChild(i)}renderRemoveNotifications(){this.$notifications.classList.add("hidden"),this.$notifications.innerHTML=""}renderAddNotificationChannelNotifications(e,t){const i=p`
			<div class="notification notification--${t}">
				<p>${e}</p>
			</div>
		`;this.$notificationChannelNotifications.classList.remove("hidden"),this.$notificationChannelNotifications.innerHTML="",this.$notificationChannelNotifications.appendChild(i)}renderRemoveNotificationChannelNotifications(){this.$notificationChannelNotifications.classList.add("hidden"),this.$notificationChannelNotifications.innerHTML=""}remove(){super.remove(),this.unpreventFormSubmit()}async handleReceiveNotifications(e){if(!e)return void this.setState({receiveNotifications:e,estimatedNumberOfResults:""});this.setState({loading:!0});const t=new l("notification-search-result-estimate");t.setAttribute("searchContext",this.props.searchContext),t.setAttribute("searchParameters",this.getSearchParameters(this.props.searchUrl));const i=t.serialize(),a=await u({url:"/ccapi/v2/notification-search-result-estimate",method:"POST",data:i}),s=new d;s.sync(a);const[r]=s.findAll("notification-search-result-estimate");this.isSearchTooGenericForNotifications=r.isSearchTooGenericForNotifications;const n=this.getEstimatedNumberOfResultsForDaysMessage(r.resultCountForTimeWindow,r.timeWindowInDays);this.setState({loading:!1,receiveNotifications:e,estimatedNumberOfResults:n})}getEstimatedNumberOfResultsForDaysMessage(e,t){const i=e/t;return 0===i?v("ad_search.saved_search.create.no_results_in_last_two_weeks"):i>=1.8?v("ad_search.saved_search.create.results_per_day",{results:Math.round(i)}):i<1.8?v("ad_search.saved_search.create.results_per_week",{results:Math.round(7*i)}):""}}export{$ as default};
